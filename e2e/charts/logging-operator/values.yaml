# Default values for logging-operator.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

replicaCount: 1

image:
  # -- Name of the image repository to pull the container image from.
  repository: ghcr.io/kube-logging/logging-operator

  # -- Image tag override for the default value (chart appVersion).
  tag: ""

  # -- [Image pull policy](https://kubernetes.io/docs/concepts/containers/images/#updating-images) for updating already existing images on a node.
  pullPolicy: IfNotPresent

env: []
volumes: []
volumeMounts: []

extraArgs:
  - -enable-leader-election=true
imagePullSecrets: []

# -- A name in place of the chart name for `app:` labels.
nameOverride: ""

# -- A name to substitute for the full names of resources.
fullnameOverride: ""

# -- A namespace override for the app.
namespaceOverride: ""

# -- Namespace to watch for LoggingOperator Custom Resources.
watchNamespace: ""

# -- Define annotations for logging-operator pods.
annotations: {}

# -- Deploy CRDs used by Logging Operator.
createCustomResource: false

http:
  # -- HTTP listen port number.
  port: 8080

  # -- Service definition for query http service.
  service:
    type: ClusterIP
    clusterIP: None
    # Annotations to query http service
    annotations: {}
    # Labels to query http service
    labels: {}

rbac:
  # -- Create rbac service account and roles.
  enabled: true

  psp:
    # -- Must be used with `rbac.enabled` true. If true, creates & uses RBAC resources required in the cluster with [Pod Security Policies](https://kubernetes.io/docs/concepts/policy/pod-security-policy/) enabled.
    enabled: true

    # -- PSP annotations
    annotations:
      seccomp.security.alpha.kubernetes.io/allowedProfileNames: 'docker/default,runtime/default'
      seccomp.security.alpha.kubernetes.io/defaultProfileName: 'runtime/default'
    ## Specify pod annotations
    ## Ref: https://kubernetes.io/docs/concepts/policy/pod-security-policy/#apparmor
    ## Ref: https://kubernetes.io/docs/concepts/policy/pod-security-policy/#seccomp
    ## Ref: https://kubernetes.io/docs/concepts/policy/pod-security-policy/#sysctl

monitoring:
  serviceMonitor:
    # -- Create a Prometheus Operator ServiceMonitor object.
    enabled: false

    additionalLabels: {}
    metricRelabelings: []
    relabelings: []

# -- Pod SecurityContext for Logging operator. [More info](https://kubernetes.io/docs/concepts/policy/security-context/)
## SecurityContext holds pod-level security attributes and common container settings.
## This defaults to non root user with uid 1000 and gid 2000.	*v1.PodSecurityContext	false
## ref: https://kubernetes.io/docs/tasks/configure-pod-container/security-context/
podSecurityContext: {}
#  runAsNonRoot: true
#  runAsUser: 1000
#  fsGroup: 2000

# -- Container SecurityContext for Logging operator. [More info](https://kubernetes.io/docs/concepts/policy/security-context/)
securityContext: {}
#  allowPrivilegeEscalation: false
#  readOnlyRootFilesystem: true
  # capabilities:
  #   drop: ["ALL"]

# -- Operator priorityClassName.
priorityClassName: {}

serviceAccount:
  # -- Define annotations for logging-operator ServiceAccount.
  annotations: {}

# -- CPU/Memory resource requests/limits
resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

nodeSelector: {}

# -- Node Tolerations
tolerations: []

# -- Node Affinity
affinity: {}

# -- Define which Nodes the Pods are scheduled on.
podLabels: {}
